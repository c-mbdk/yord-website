name: Run Unit and Functional Tests with Pytest

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  run-test:
    runs-on: ubuntu-latest 

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: test
        ports: ['5432:5432']

        # setting health checks to wait until the service is running
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Check out the repo code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run API
        env: 
          APP_SECRET_KEY: ${{secrets.APP_SECRET_KEY}}
          CSRF_SECRET_KEY: ${{secrets.CSRF_SECRET_KEY}}
          ADMIN_USERNAME: ${{secrets.ADMIN_USERNAME}}
          ADMIN_PASSWORD: ${{secrets.ADMIN_PASSWORD}}
        run: |
          python3 app.py &

      - name: Run tests
        env: 
          DATABASE_URL: 'postgres://postgres:root@postgres:${{ job.services.postgres.ports[5432] }}/test'
        run: |
          flask test   

